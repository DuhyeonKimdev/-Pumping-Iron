<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fp.pi.customerservice.CustomerServiceMapper">

<!-- 공지사항&이벤트 글 작성 -->
<insert id="writeEvent" parameterType="com.fp.pi.customerservice.Event">
	insert into event values
	(event_seq.nextval, #{e_title}, #{e_content}, sysdate, #{e_type})
</insert>


<!-- 공지사항&이벤트 글 삭제 -->
<delete id="deleteEvent" parameterType="com.fp.pi.customerservice.Event">
 	delete from event where e_no = #{e_no}
</delete>

<!-- 공지사항&이벤트 글 상세정보  -->
<select id="getDetail" resultType="com.fp.pi.customerservice.Event">
	select * from event where e_no = #{e_no}
</select>

<!-- 공지사항&이벤트 글 수정  -->
<update id="updateEvent" parameterType="com.fp.pi.customerservice.Event">
 	update event set e_type = #{e_type}, e_title = #{e_title}, e_content = #{e_content} where e_no = #{e_no}
</update>

<!-- 공지사항&이벤트 글 가져오기 -->
<select id="getevent" resultType="com.fp.pi.customerservice.Event">
select * from event order by e_date desc
</select>

<!-- 공지사항 글 가져오기 -->
<select id="getevent2" resultType="com.fp.pi.customerservice.Event">
select * from event where e_type = '공지사항' order by e_date desc
</select>

<!-- 이벤트 글 가져오기 -->
<select id="getevent6" resultType="com.fp.pi.customerservice.Event">
select * from event where e_type = '이벤트' order by e_date desc
</select>

<!-- 공지사항&이벤트 글 검색 -->
<select id="getEventCount" parameterType="com.fp.pi.tips.Selector" resultType="java.lang.Integer">
	select count(*)
		from event
		where e_content like '%'||#{search}||'%' or e_title like '%'||#{search}||'%'
</select>
<!-- 공지사항 글 검색-->
<select id="getEventCount2" parameterType="com.fp.pi.tips.Selector" resultType="java.lang.Integer">
	select count(*)
		from event where e_type = '공지사항' 
		and e_content like '%'||#{search}||'%' or e_type ='공지사항' and e_title like '%'||#{search}||'%'
</select>
<!-- 이벤트 글 검색-->
<select id="getEventCount3" parameterType="com.fp.pi.tips.Selector" resultType="java.lang.Integer">
	select count(*)
		from event where e_type = '이벤트' 
		and e_content like '%'||#{search}||'%' or e_type ='이벤트' and e_title like '%'||#{search}||'%'
</select>


<!-- 공지사항&이벤트 글 페이징 -->
<select id="getEvent" resultType="com.fp.pi.customerservice.Event" parameterType="com.fp.pi.tips.Selector">
  select *
   from (
      select rownum as rn, e_no, e_title, e_content, e_date, e_type
       from (
       		select * from event	
       		where e_content like '%'||#{search}||'%' or e_title like '%'||#{search}||'%'
       		order by e_date desc
       		)	
       	)
			where rn &gt;= #{start} and rn &lt;= #{end}
</select>
<!-- 공지사항 글 페이징 -->
<select id="getEvent4" resultType="com.fp.pi.customerservice.Event" parameterType="com.fp.pi.tips.Selector">
  select *
   from (
      select rownum as rn, e_no, e_title, e_content, e_date, e_type
       from (
       		select * from event	
       		where e_type ='공지사항' and e_content like '%'||#{search}||'%' or e_type ='공지사항' and e_title like '%'||#{search}||'%'
       		order by e_date desc
       		)	
       	)
			where rn &gt;= #{start} and rn &lt;= #{end}
</select>
<!-- 이벤트 글 페이징 -->
<select id="getEvent5" resultType="com.fp.pi.customerservice.Event" parameterType="com.fp.pi.tips.Selector">
  select *
   from (
      select rownum as rn, e_no, e_title, e_content, e_date, e_type
       from (
       		select * from event	
       		where e_type ='이벤트' and e_content like '%'||#{search}||'%' or e_type ='이벤트' and e_title like '%'||#{search}||'%'
       		order by e_date desc
       		)	
       	)
			where rn &gt;= #{start} and rn &lt;= #{end}
</select>
<!-- 고객센터(자주찾는질문) 글 작성 -->
<insert id="writeQuestion" parameterType="com.fp.pi.customerservice.Question">
	insert into question values(question_seq.nextval, #{q_title}, #{q_content}, sysdate, #{q_type})
</insert>
<!-- 고객센터(자주찾는질문) 글 가져오기  -->
<select id="getAllQuestion" resultType="com.fp.pi.customerservice.Question">
	select * from question order by q_date desc
</select>
<!-- 고객센터(자주찾는질문) 글 삭제하기  -->
<delete id="deleteQuestion" parameterType="com.fp.pi.customerservice.Question">
	delete from question where q_no = #{q_no}
</delete>
<!-- 고객센터(자주찾는질문) 글 상세정보 -->
<select id="detailQuestion" resultType="com.fp.pi.customerservice.Question">
   	select * from question where q_no = #{q_no}
</select>
<!-- 고객센터(자주찾는질문) 글 수정하기 -->
<update id="updateQuestion" parameterType="com.fp.pi.customerservice.Question">
	update question set q_title=#{q_title}, q_content=#{q_content},q_type=#{q_type} where q_no = #{q_no}
</update>
<!-- 고객센터(1:1문의) 글 작성하기 -->
<insert id="writeInquiry" parameterType="com.fp.pi.customerservice.Inquiry">
	insert into inquiry values(inquiry_seq.nextval, #{i_title}, #{i_content}, sysdate, #{i_type}, #{i_to},
	#{i_from}, '0' , #{i_photo})
</insert>
<!-- 고객센터(1:1문의) 글 가져오기 -->
<select id="getAllInquiry" parameterType="com.fp.pi.member.Member" resultType="com.fp.pi.customerservice.Inquiry">
 	select * from inquiry where i_from = #{m_email} order by i_date desc
</select>
<!-- 고객센터(1:1문의) admin 글 가져오기 -->
<select id="getAllInquiryAdmin" parameterType="com.fp.pi.member.Member" resultType="com.fp.pi.customerservice.Inquiry">
 	select * from inquiry where i_to = 'admin' order by i_date desc
</select>
<!-- 고객센터(1:1문의) 글 상세정보 -->
<select id="detailInquiry" resultType="com.fp.pi.customerservice.Inquiry">
	select * from inquiry where i_no = #{i_no}
</select>
</mapper>